import numpy as np
import matplotlib.pyplot as plt

# 假设我们有一个17 x 15的实验结果矩阵（model performance）
# performance_matrix = np.random.rand(17, 15)  # 这里是示例数据，实际数据应替换此矩阵
performance_matrix = [
 [0.49382394, 0.44455018, 0.39669331, 0.55239738, 0.44688465, 0.44782166, 0.45078628, 0.47966427, 0.57957888, 0.4144962 , 0.45115345, 0.45616892, 0.49824779, 0.40480351, 0.58329185],
 [0.41975424, 0.51504982, 0.43609381, 0.53852087, 0.46932883, 0.43335208, 0.55695078, 0.51074523, 0.46417988, 0.45281996, 0.43362402, 0.46747765, 0.44703366, 0.52925841, 0.42758326],
 [0.50564089, 0.57563491, 0.49271269, 0.41781773, 0.55528585, 0.51578835, 0.55675403, 0.49304584, 0.43671633, 0.41410795, 0.49377089, 0.54957385, 0.49226724, 0.48019179, 0.45668086],
 [0.42319626, 0.57411292, 0.48656004, 0.43309135, 0.46828778, 0.5385794 , 0.48716488, 0.58031084, 0.45966779, 0.46511559, 0.55573442, 0.47013501, 0.4       , 0.49587515, 0.48949046],
 [0.55768198, 0.39243667, 0.49247232, 0.55506532, 0.55015798, 0.53055307, 0.52994428, 0.55434518, 0.5879158 , 0.4605492 , 0.49639488, 0.50497419, 0.51008556, 0.57712996, 0.52494632],
 [0.46249555, 0.51256515, 0.59007986, 0.43411009, 0.39878173, 0.45598265, 0.51327625, 0.54979329, 0.52375513, 0.47494243, 0.56741228, 0.52749656, 0.44559808, 0.40247752, 0.42170926],
 [0.50026856, 0.49833425, 0.5361034 , 0.59641202, 0.51252115, 0.44811482, 0.56558388, 0.58979824, 0.66510709, 0.605     , 0.46783384, 0.44770842, 0.45400046, 0.4911682 , 0.5643956 ],
 [0.61223457, 0.54920445, 0.47064696, 0.5666627 , 0.51716787, 0.54005326, 0.58280478, 0.56105111, 0.40324196, 0.49190263, 0.48010636, 0.4815963 , 0.51550992, 0.41261745, 0.53384541],
 [0.40159505, 0.4938029 , 0.44779012, 0.39165029, 0.45391984, 0.40109143, 0.58295194, 0.42701184, 0.51360912, 0.66701321, 0.40434651, 0.47274101, 0.51092193, 0.38990706, 0.51681292],
 [0.52040487, 0.655661  , 0.43909096, 0.42226174, 0.4058011 , 0.6752062 , 0.67691537, 0.5643992 , 0.54438546, 0.42622502, 0.5312985 , 0.59040784, 0.59459283, 0.44564103, 0.55231034],
 [0.66094544, 0.40982585, 0.60311993, 0.58      , 0.509485  , 0.55806303, 0.58168469, 0.67270456, 0.47045742, 0.46893853, 0.4137154 , 0.40176052, 0.59114471, 0.54877322, 0.41756503],
 [0.53711243, 0.63158304, 0.56354857, 0.59470119, 0.63537762, 0.55762752, 0.65222815, 0.51965487, 0.53703054, 0.55126368, 0.5412852 , 0.59034511, 0.54646592, 0.51018766, 0.52606085],
 [0.53911692, 0.50483792, 0.57234797, 0.58357695, 0.65539311, 0.51691574, 0.5712716 , 0.67615439, 0.61046551, 0.55377567, 0.56756945, 0.55136859, 0.50803575, 0.63331246, 0.39867207],
 [0.66307318, 0.56671303, 0.63522729, 0.61077354, 0.6258921 , 0.67268729, 0.63616846, 0.62147098, 0.61513496, 0.60673372, 0.62858445, 0.39458476, 0.61330408, 0.61783175, 0.52248667],
 [0.55704064, 0.6219926 , 0.50963314, 0.53727671, 0.68456   , 0.679,      0.64903927, 0.57062193, 0.61155992, 0.62580866, 0.56658032, 0.65192948, 0.57710359, 0.57394545, 0.39966433],
 [0.68755823, 0.63434566, 0.65197193, 0.64159382, 0.64255707, 0.69149978, 0.6745034 , 0.63652632, 0.6273161 , 0.56118947, 0.60350152, 0.61502747, 0.57497096, 0.60467035, 0.58269403],
 [0.59637167, 0.62412141, 0.64211001, 0.65412175, 0.64170321, 0.68439754, 0.6482823 , 0.63629949, 0.65187711, 0.62753223, 0.61489223, 0.56922548, 0.55155163, 0.51845828, 0.55712815]]


# 设置\tau和\omega的取值范围
tau_init_values = np.linspace(0.15, 0.95, 17)
omega_values = np.linspace(0.01, 0.15, 15)

# 创建网格坐标
X, Y = np.meshgrid(omega_values, tau_init_values)

# 设置字体为 Times New Roman
plt.rcParams['font.family'] = 'Times New Roman'

# 色调列表
colormaps = [
    "gray", 
    # "bone", "pink", "spring", "summer", "autumn", "winter",  # Sequential
    # "viridis", "inferno", "plasma", "magma", "cividis",  # Sequential
    # "Blues", "Greens", "Reds", "Purples", "Oranges", "YlGnBu", "YlOrRd",  # Sequential
    # "coolwarm", "PiYG", "RdBu", "BrBG", "Spectral",  # Diverging
    # "twilight", "twilight_shifted",  # Cyclic
    # "Set1", "Set2", "Set3", "Paired", "Pastel1"  # Qualitative
]

# 创建多个图像，使用不同的色调
for i, cmap_name in enumerate(colormaps):
    plt.figure(figsize=(12, 8))
    cp = plt.contourf(X, Y, performance_matrix, cmap=cmap_name, levels=15)

    # 添加标题和标签，并设置标题加粗，字号为20
    plt.title(f'Contour Plot of Model Performance vs. τ_init and ω (UDA/mIoU)', fontsize=20, fontweight='bold')
    plt.xlabel('ω (Omega)', fontsize=18)
    plt.ylabel('τ_init', fontsize=18)

    # 设置坐标轴刻度字体大小为16
    plt.tick_params(axis='both', labelsize=17)

    # 添加色条并设置其字体大小为16
    cbar = plt.colorbar(cp)
    cbar.ax.tick_params(labelsize=17)

    # 保存图像
    plt.savefig(f'performance_vs_tau_omega_{cmap_name}.png')
    print(f'Plot saved as performance_vs_tau_omega_{cmap_name}.png')
